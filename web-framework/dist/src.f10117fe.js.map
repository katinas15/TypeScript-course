{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAE,ADKxB,ECLwB,IAAI,EAAE,IDK9B,ICLsB;AAAkB,ADQpC,ECRoC,GAAG,EAAE,IDQzC,IAAA,CAAoB,IAApB,EAAmC;ACRjB,ADQE,CCRX,CAAb,ODQwB,IAAA,GAAA,IAAA;ACNxB,ADII,OCJG,CAAC,CDIJ,ECJJ,CAAY,GDIR,CCJY,CAAC,CDI2B,ECJhC,ADIR,CCJiB,MAAT,CAAZ;AAEA,ADI2C,ICJvC,CAAC,GAAL,CAAS;AAAE,EAAA,IAAI,EAAE,SAAR;AAAmB,ADKxB,ECLwB,ADKxB,GCL2B,CDK3B,CCL6B,ADK7B,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;ACLf,ADMD,CCNR,UDMe,KAAK,IAAL,CAAU,QAAV,CAAP;ACJR,ADKK,GAFD,ICHG,CAAC,GAAR,CAAY,IAAI,CAAC,GAAL,CAAS,MAAT,CAAZ;AAEA,IAAI,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AACd,ADIA,ECJA,ADIA,IAAA,CAAA,ECJO,CAAC,GAAR,CAAY,EDIZ,CAAA,GAAA,GAAA,CCJA,SDII,MAAJ,EAAqB;ACHxB,ADIO,CCNR,GDMQ,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;ACFR,ADGK,GAFD,CCDA,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AACd,EAAA,OAAO,CAAC,GAAR,CAAY,UAAZ;AACH,ADGG,CCLJ,CDKI,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;ACD5C,ADEQ,ICFJ,CAAC,EAAL,CAAQ,ADEM,MCFd,EAAgB,ADEM,GAAG,KAAK,ICFd,EDES,CAAY,SAAZ,KAA0B,EAA3C;ACDJ,ADEI,ECFJ,EDEI,KCFG,CAAC,EDEI,CCFZ,ADEa,CCFD,GDER,CAAc,ECFlB,MDEI;ACDP,ADEO,CCJR,QDIa,MAAL,CAAY,SAAZ,IAAyB,QAAzB;ACAR,ADCK,GAJD,CCGA,CAAC,OAAL,CAAa,QAAb;;ADGI,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACrB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AACA,QAAI,CAAC,QAAD,IAAa,CAAC,QAAQ,CAAC,MAA3B,EAAmC;AAC/B;AACH;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,QAAD,EAAS;AACtB,MAAA,QAAQ;AACX,KAFD;AAGH,GATD;;AAUJ,SAAA,IAAA;AA5BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n    name?: string\r\n    age?: number\r\n}\r\n\r\ntype Callback = () => void\r\n\r\nexport class User {\r\n    events: { [key: string]: Callback[] } = {}\r\n\r\n    constructor(private data: UserProps) {}\r\n    get(propName: string): number | string {\r\n        return this.data[propName]\r\n    }\r\n\r\n    set(update: UserProps): void {\r\n        Object.assign(this.data, update)\r\n    }\r\n\r\n    on(eventName: string, callback: Callback): void {\r\n        const handlers = this.events[eventName] || []\r\n        handlers.push(callback)\r\n        this.events[eventName] = handlers\r\n    }\r\n\r\n    trigger(eventName: string): void {\r\n        const handlers = this.events[eventName]\r\n        if (!handlers || !handlers.length) {\r\n            return\r\n        }\r\n\r\n        handlers.forEach((callback) => {\r\n            callback()\r\n        })\r\n    }\r\n}\r\n","import { User } from \"./models/User\"\r\n\r\nconst user = new User({ name: \"myname\", age: 20 })\r\n\r\nconsole.log(user.get(\"name\"))\r\n\r\nuser.set({ name: \"newname\", age: 999 })\r\n\r\nconsole.log(user.get(\"name\"))\r\n\r\nuser.on(\"change\", () => {\r\n    console.log(\"change 1\")\r\n})\r\n\r\nuser.on(\"change\", () => {\r\n    console.log(\"change 2\")\r\n})\r\n\r\nuser.on(\"save\", () => {\r\n    console.log(\"save\")\r\n})\r\n\r\nuser.trigger(\"change\")\r\n"]}